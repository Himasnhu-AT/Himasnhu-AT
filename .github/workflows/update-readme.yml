name: Update README

on:
  schedule:
    # Runs at 12 AM daily
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
 

    - name: Calculate Lines of Code
      id: loc
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    
      run: |
        # Fetch list of repositories (assuming public; modify for pagination and private repos as needed)
        repos=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -s "https://api.github.com/users/himasnhu-at/repos?per_page=300" | jq -r '.[].clone_url')
        echo $repos
        total_loc=0

        # Loop through each repository clone URL
        for repo in $repos; do
            echo "Processing $repo"
            # Clone repository to a temporary directory and cd into it
            git clone $repo temp_repo --depth 1 && cd temp_repo
            # Calculate LOC for the repository, handling filenames with spaces or special characters
            repo_loc=$(find . -type f \( \
              -name "*.json" -o \
              -name "*.yaml" -o \
              -name "*.yml" -o \
              -name "*.js" -o \
              -name "*.py" -o \
              -name "*.ts" -o \
              -name "*.rs" -o \
              -name "*.swift" -o \
              -name "*.md" -o \
              -name "*.mdx" -o \
              -name "*.jsx" -o \
              -name "*.tsx" -o \
              -name "*.go" -o \
              -name "*.cs" -o \
              -name "*.c" -o \
              -name "*.cpp" -o \
              -name "*.c++" -o \
              -name "*.asm" -o \
              -name "*.ipynb" \
              \) -exec wc -l {} + | awk '{total += $1} END {print total}')
            echo "LOC for $(basename $repo): $repo_loc"
            # Add to total LOC
            total_loc=$((total_loc + repo_loc))
            # Cleanup: cd out and remove the temporary directory
            cd .. && rm -rf temp_repo
            echo "Cleanup complete, $total_loc LOC so far"
        done
        echo "Total LOC: $total_loc" 

    - name: Fetch GitHub Stats
      id: github_stats
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}       
      run: |
        # Fetch public repositories and handle response
        public_repos_response=$(curl -s https://api.github.com/users/himasnhu-at)
        public_repos=$(echo $public_repos_response | jq '.public_repos')
        if [ $? -ne 0 ]; then
          echo "Error fetching public repositories"
          exit 1
        fi
        echo $public_repos
        
        # Fetch private repositories
        private_repos_response=$(curl -L \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/user/repos)
        private_repos=$(echo $private_repos_response | jq '. | length')
        if [ $? -ne 0 ]; then
          echo "Error fetching private repositories"
          exit 1
        fi
        echo $private_repos

        echo "PUBLIC_REPOS=$public_repos" >> $GITHUB_ENV
        echo "PRIVATE_REPOS=$private_repos" >> $GITHUB_ENV

    - name: Update README.md
      run: |
        LOC=$(echo ${{ env.LOC }})
        PUBLIC_REPOS=$(echo ${{ env.PUBLIC_REPOS }})
        PRIVATE_REPOS=$(echo ${{ env.PRIVATE_REPOS }})

        # Replace the lines in README.md
        sed -i "s|![Lines of Code](.*)|![Lines of Code](https://img.shields.io/badge/LOC-${LOC}%20Lines-blue)|" README.md
        sed -i "/---/,+5d" README.md
        echo -e "---\n** My Github Stats **\n\n> >\n> Private Repositories: $PRIVATE_REPOS\n  >\n> Public Repositories: $PUBLIC_REPOS\n---" >> README.md

    - name: Commit and Push Changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
        git add README.md
        git commit -m "Update README with latest stats"
        git push origin HEAD:main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
